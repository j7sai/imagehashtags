{"version":3,"sources":["components/dashborad/Header.js","components/dashborad/ImageList.js","components/dashborad/searchbar.js","components/dashborad/Pagination.js","components/dashborad/Dashboard.js","components/uploadimage/AddImageUpload.js","components/uploadimage/UploadimageMain.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","drawer","breakpoints","up","width","flexShrink","appBar","zIndex","height","menuButton","marginRight","spacing","display","toolbar","mixins","drawerPaper","backgroundColor","content","padding","ResponsiveDrawer","props","container","classes","useTheme","React","useState","mobileOpen","className","List","ListItem","button","ListItemText","style","color","align","href","textDecoration","activeStyle","AppBar","position","Toolbar","IconButton","aria-label","edge","Grid","item","xs","Typography","variant","noWrap","float","Hidden","smUp","implementation","Drawer","anchor","direction","open","paper","ModalProps","keepMounted","xsDown","marginLeft","flexWrap","justifyContent","overflow","imageThumbnail","alignItems","icon","ImageGridList","GridList","cellHeight","cols","gridList","imageList","map","GridListTile","key","id","src","imagesrc","alt","background","input","flex","iconButton","divider","margin","CustomizedInputBase","search","setSearch","Paper","InputBase","placeholder","onChange","e","target","value","onClick","axios","get","then","response","handleSetSearchImages","data","catch","error","console","log","type","marginTop","PaginationSize","countImages","totalPages","Math","ceil","Pagination","count","size","event","page","handlePage","Dashboard","handlesearchimages","images","setState","handlePaginationNumber","pageNumber","state","results","Header","this","length","handleClick","handleClickImage","Component","palette","text","secondary","maxWidth","gridContainer","Button","listContainer","columns","demo","FormPropsTextFields","dense","Fragment","justify","fontFamily","accept","fileHandlerSave","multiple","htmlFor","component","sm","photosList","primary","name","TextField","label","handlerDesc","multiline","save","UploadImage","handlerdescription","vname","vvalue","values","handleFileSave","keys","Object","files","formphotoList","handleOpen","handleClose","handleSubmit","getCreateResponse","currentResponse","currentRepsonse","setTimeout","description","message","err","form_data","FormData","append","forEach","post","headers","res","status","Promise","resolve","reject","Snackbar","onClose","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c4635d8.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { Grid } from '@material-ui/core';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport {TextField} from '@material-ui/core';\r\nimport SearchBar from 'material-ui-search-bar';\r\n\r\nconst drawerWidth = 205;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n   height:\"56px\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up('sm')]: {\r\n      display: 'none',\r\n    },\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor: \"Indigo\"\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\nfunction ResponsiveDrawer(props) {\r\n  const { container } = props;\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [mobileOpen ] = React.useState(false);\r\n\r\n  const drawer = (\r\n    <div>\r\n      <div className={classes.toolbar} />\r\n    \r\n      <List>\r\n      <ListItem button >\r\n            <ListItemText style={{ color: \"Black\", align:\"centre\" }}></ListItemText>\r\n          </ListItem>\r\n        <a href=\"/imageapp/dashboard/\" style={{ textDecoration: 'none' }}>\r\n          <ListItem button >\r\n            <ListItemText style={{ color: \"White\",textDecoration: 'none' }} activeStyle = {{backgroundColor:\"Blue\"}}>Dashboard</ListItemText>\r\n            <ListItemText style={{ color: \"Black\", align:\"centre\" }}></ListItemText>\r\n          </ListItem>\r\n        </a>\r\n        <ListItem button >\r\n      \r\n          <a href='/imageapp/uploadimage/'>\r\n            <ListItemText style={{ color: \"White\",textDecoration: 'none' }} activeStyle = {{backgroundColor:\"Blue\"}}>Upload Image</ListItemText>\r\n          </a>\r\n        </ListItem>\r\n        \r\n      </List>\r\n      \r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <AppBar position=\"fixed\" className={classes.appBar} style={{ backgroundColor: \"Black\",height:52 }}>\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\"\r\n            className={classes.menuButton}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Grid item xs={11}>\r\n            <Typography variant=\"h6\" noWrap style={{ float: \"left\"}}>\r\n                Stock Image Service\r\n            </Typography>\r\n            <Typography variant=\"h6\" noWrap  >\r\n\r\n                  </Typography>\r\n          </Grid>\r\n\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      <Grid container spacing={1}>\r\n        <Grid item xs={4}>\r\n          <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\r\n            <Hidden smUp implementation=\"css\">\r\n              <Drawer\r\n                container={container}\r\n                variant=\"temporary\"\r\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                open={mobileOpen}\r\n                classes={{\r\n                  paper: classes.drawerPaper,\r\n                }}\r\n                ModalProps={{\r\n                  keepMounted: true, // Better open performance on mobile.\r\n                }} >\r\n                {drawer}\r\n              </Drawer>\r\n            </Hidden>\r\n            <Hidden xsDown implementation=\"css\">\r\n              <Drawer classes={{\r\n                paper: classes.drawerPaper,\r\n                  }}\r\n                variant=\"permanent\"\r\n                open >\r\n                {drawer}\r\n              </Drawer>\r\n            </Hidden>\r\n          </nav>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nResponsiveDrawer.propTypes = {\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  container: PropTypes.instanceOf(typeof Element === 'undefined' ? Object : Element),\r\n};\r\n\r\nexport default ResponsiveDrawer;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport Grid from '@material-ui/core/Grid';\r\n// import tileData from './tileData';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport axios from 'axios';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchBar from 'material-ui-search-bar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    marginLeft:'14%',\r\n\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    overflow: 'hidden',\r\n    backgroundColor: \t\"rgb(214, 214, 245)\",\r\n  },\r\n\r\n  imageThumbnail: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: 100,\r\n  },\r\n  icon: {\r\n    color: 'rgba(255, 255, 255, 0.54)',\r\n  },\r\n  // gridList:{\r\n  // }\r\n}));\r\n\r\nconst tileData=[\r\n{\r\n    \"id\": 1,\r\n    \"tag\": [],\r\n    \"imagesrc\": \"http://127.0.0.1:8000/media/documents/Sample-Hospital-Software-Bill-MyOPD-Beds_R8UK4CN.jpg\",\r\n    \"description\": \"\",\r\n    \"createdDate\": \"2020-02-14\",\r\n    \"user\": 1,\r\n    cols:2,\r\n    rows:1\r\n},\r\n{\r\n    \"id\": 2,\r\n    \"tag\": [],\r\n    \"imagesrc\": \"http://127.0.0.1:8000/media/documents/1_mIPxTSp.jpg\",\r\n    \"description\": \"\",\r\n    \"createdDate\": \"2020-02-14\",\r\n    cols:1,\r\n    rows:1\r\n\r\n},\r\n{\r\n    \"id\": 3,\r\n    \"tag\": [],\r\n    \"imagesrc\": \"http://127.0.0.1:8000/media/documents/Sample-Hospital-Software-Bill-MyOPD-Beds_R8UK4CN.jpg\",\r\n    \"description\": \"\",\r\n    \"createdDate\": \"2020-02-14\",\r\n    \"user\": 1,\r\n    cols:2,\r\n    rows:2\r\n\r\n},\r\n{\r\n    \"id\": 4,\r\n    \"tag\": [],\r\n    \"imagesrc\": \"http://127.0.0.1:8000/media/documents/Sample-Hospital-Software-Bill-MyOPD-Beds_VayyfKv.jpg\",\r\n    \"description\": \"\",\r\n    \"createdDate\": \"2020-02-14\",\r\n    cols:1,\r\n    rows:1\r\n}]\r\n\r\nexport default function ImageGridList(props) {\r\n  const classes = useStyles();\r\n  const [imageList, setImageList] = React.useState([]);\r\n\r\n \r\n  return (\r\n    <div className={classes.root}>     \r\n      <GridList cellHeight={250}  cols={4}     className={classes.gridList}>\r\n      \r\n        {props.imageList.map(item => (\r\n          <GridListTile key={item.id} >\r\n            <img  src={item.imagesrc} alt=\"image\" />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport DirectionsIcon from '@material-ui/icons/Directions';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: '2px 4px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    width: 1000,\r\n    marginLeft: 92,\r\n    background: \"rgba(245, 0, 6, 0.22)\",\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    color:\"black\",\r\n  },\r\n  iconButton: {\r\n    padding: 10,\r\n  },\r\n  divider: {\r\n    height: 28,\r\n    margin: 4,\r\n  },\r\n}));\r\n\r\nexport default function CustomizedInputBase(props) {\r\n  const classes = useStyles();\r\n  const [search, setSearch] = React.useState('');\r\n \r\n  function handleSearchInput(e){\r\n        setSearch(e.target.value)\r\n  }\r\n  \r\n  function sumbitSearch(){\r\n      axios.get(`http://localhost:8000/images/?search=${search}`)\r\n      .then(response => {\r\n        props.handleSetSearchImages(response.data)\r\n      })\r\n      .catch(error => {\r\n          console.log(error)\r\n      })  \r\n  }\r\n\r\n  return (\r\n    <Paper  className={classes.root} >\r\n\r\n      <InputBase\r\n        className={classes.input}\r\n        placeholder=\"search Images using tags,description and dates ,ie ex: fromdate:20-19-2020 tags:animals,sports\"\r\n        onChange={handleSearchInput}\r\n      />\r\n      <IconButton onClick={sumbitSearch} type=\"submit\" className={classes.iconButton} aria-label=\"search\">\r\n        <SearchIcon />\r\n      </IconButton>\r\n     \r\n    </Paper>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      marginTop: theme.spacing(2),\r\n      marginLeft:\"36%\"\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function PaginationSize(props) {\r\n  const classes = useStyles();\r\n  let countImages = props.countImages\r\n  let totalPages = Math.ceil(countImages/30)\r\n  function handleChange(event,page){\r\n    props.handlePage(page)\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <Pagination count={totalPages!==0?totalPages:1} size=\"large\" onChange={handleChange}/>\r\n    </div>\r\n  );\r\n}\r\n","import React,{Component} from 'react'\r\nimport Header from './Header';\r\nimport Imagelist from './ImageList';\r\nimport axios from 'axios';\r\nimport SearchBar from './searchbar'\r\nimport Pagination from './Pagination';\r\nclass Dashboard extends Component{\r\n    constructor(props)\r\n    {\r\n        super()\r\n        this.state={\r\n            images:{\r\n                results:[],\r\n                count:0\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n      axios.get('http://localhost:8000/images/')\r\n      .then(response => {\r\n       this.setState({images:response.data})\r\n      })\r\n      .catch(error => {\r\n          console.log(error)\r\n      }) \r\n    }\r\n\r\n    handlesearchimages=(images)=>{\r\n      this.setState({images:images})\r\n    }\r\n\r\n    handlePaginationNumber=(pageNumber)=>{\r\n        axios.get(`http://localhost:8000/images/?page=${pageNumber}`)\r\n        .then(response => {\r\n         this.setState({images:response.data})\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n        }) \r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <Header />             \r\n                <br/><br/><br/>\r\n                <center>\r\n                <SearchBar handleSetSearchImages={this.handlesearchimages} />\r\n                <br/>\r\n                {this.state.images.results.length!==0?<Imagelist imageList={this.state.images.results} handleClick={this.handleClickImage}/>:<p>No Images Found</p>}\r\n                {this.state.images.results.length!==0?<Pagination handlePage={this.handlePaginationNumber} countImages = {this.state.images.count}/>:null}\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Dashboard","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {TextField, DialogActions, FormControl} from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    background:\"\trgb(214, 214, 245)\",\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(3),\r\n      width: 300,\r\n    },\r\n    marginLeft:200,\r\n    marginRight: \"12%\",\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      marginTop: 114 ,\r\n      color: theme.palette.text.secondary,\r\n      maxWidth: 350,\r\n    },\r\n\r\n  },\r\n  gridContainer: {\r\n      maxWidth: 940\r\n  },\r\n  Button:{\r\n    background:\"#c0c1aa\"\r\n  },\r\n  listContainer:{\r\n    columns:2,\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  }, \r\n  demo: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    width:100,\r\n  },\r\n}));\r\n\r\nfunction generate(element) {\r\n  return [0, 1, 2].map(value =>\r\n    React.cloneElement(element, {\r\n      key: value,\r\n    }),\r\n  );\r\n}\r\n\r\nexport default function FormPropsTextFields(props) {\r\n  const classes = useStyles();\r\n  const [fileList, setFileList] = React.useState([]);\r\n  const [photos, setPhotos] = React.useState([]);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [secondary, setSecondary] = React.useState(false);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n      <Paper className={classes.paper} style={{marginTop:114,background:'rgb(148, 175, 164)',marginLeft:'16%',marginRight:'16%'}}>\r\n        <Grid container className={classes.gridContainer} spacing={3} justify=\"center\" alignItems=\"center\">\r\n          <Grid item xs={12}>\r\n            <h1 style={{color:'rgb(255, 255, 255)',fontFamily:'Times New Roman'}}>Add Images with Description</h1>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <input accept=\"image/*\"  className={classes.input} onChange={props.fileHandlerSave} id=\"contained-button-file\"  multiple type=\"file\" />\r\n            <label htmlFor=\"contained-button-file\">\r\n              <Button variant=\"contained\" color=\"primary\" component=\"span\">\r\n                Upload\r\n              </Button>\r\n            </label>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} direction=\"row\"  >\r\n            <Grid xs={10}>\r\n            {/* <React.Fragment className={classes.demo}> */}\r\n            <List dense={dense} className={classes.listContainer}>\r\n              {props.photosList.map(item=>{\r\n                return (\r\n                  <ListItem>\r\n                  <ListItemText\r\n                    primary={item.name}\r\n                  />\r\n                </ListItem>\r\n                ) \r\n              })}\r\n            </List>\r\n            </Grid>\r\n            <Grid xs={4}></Grid>\r\n          {/* </React.Fragment> */}\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"standard-textarea\"\r\n              label=\"Description\"\r\n              placeholder=\"Placeholder\"\r\n              style={{width:400}}\r\n              name=\"description\"\r\n              onChange={props.handlerDesc}\r\n              multiline\r\n            />\r\n          </Grid>\r\n          <Button type=\"sumbit\" onClick={props.save} className={classes.Button} >sumbit</Button>\r\n          <br/><br/><br/><br/>\r\n        </Grid>\r\n      </Paper>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}","import React,{Component} from 'react'\r\nimport AddUploadImage from './AddImageUpload';\r\nimport axios from 'axios';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nclass UploadImage extends Component{\r\n    constructor(props)\r\n    {\r\n        super()\r\n        this.state={\r\n            photosList:[],\r\n            formphotoList:[],\r\n            values:{\r\n                description:'',\r\n                },\r\n            open:false,\r\n            message:''\r\n        };\r\n\r\n    }\r\n    handlerdescription=(e)=>{\r\n        const vname=e.target.name\r\n        const vvalue=e.target.value\r\n        this.setState(state=>{\r\n            state.values[vname]=vvalue\r\n            return {values:state.values} \r\n    });\r\n    }\r\n     \r\n    handleFileSave=(e)=>{\r\n        let keys = Object.keys(e.target.files)\r\n        let photosList = keys.map(key =>{\r\n            return e.target.files[keys[key]]\r\n        })\r\n        this.setState({photosList:photosList,formphotoList:e.target.files})\r\n    }\r\n    handleOpen =  () => {\r\n      this.setState({open: true});\r\n    };\r\n  \r\n     handleClose = () => {\r\n      this.setState({open: false });\r\n    };\r\n  \r\n    getCreateResponse() {\r\n        let form_data = new FormData();\r\n        form_data.append('description', this.state.values.description)\r\n        let keys = Object.keys(this.state.formphotoList)\r\n        keys.forEach(key=>{\r\n          form_data.append(\"images[]\",this.state.formphotoList[key])\r\n        })\r\n        let url = 'http://localhost:8000/image/';\r\n        const response =axios.post(url, form_data, {\r\n            headers: {\r\n              'content-type': 'multipart/form-data'\r\n            }\r\n          })\r\n          .then(res => {\r\n                let status = res.status\r\n                if (status==200 || status==201){\r\n                  this.setState({open:true,message:\"Images saved Successfully\"})\r\n                }\r\n                else{\r\n                  this.setState({open:true,message:res.data[\"message\"]})\r\n                }\r\n              })\r\n              .catch(err =>{\r\n                  let response = err.response\r\n                  this.setState({open:true,message:response.data[\"message\"]})\r\n              }\r\n          )\r\n        return new Promise((resolve, reject) => {\r\n          setTimeout(function() {\r\n            console.log(response)\r\n            response ? resolve(response) : reject('Error');\r\n          },0);\r\n        })\r\n      }\r\n\r\n    handleSubmit = () => {\r\n          console.log(\"Dsdssd\")\r\n          this.getCreateResponse()\r\n            .then(currentResponse => this.getCreateResponse())\r\n            .then(currentRepsonse => {\r\n              setTimeout(() => {\r\n                this.setState({\r\n                  photosList:[],\r\n                  formphotoList:[],\r\n                  values:{\r\n                      description:'',\r\n                      },\r\n                  open:false,\r\n                  message:''\r\n                    })\r\n\r\n              }, 2000);\r\n              return true;\r\n            })\r\n            .catch(err => {\r\n            })\r\n      };\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div>\r\n                <AddUploadImage photosList={this.state.photosList} handlerDesc={this.handlerdescription}\r\n                 fileHandlerSave={this.handleFileSave} save={this.handleSubmit} />\r\n                  <Snackbar\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    message={this.state.message}\r\n                  />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default UploadImage","import React,{Component} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Header from './components/dashborad/Header';\nimport Dashboard from './components/dashborad/Dashboard';\nimport { BrowserRouter as Route, Switch, BrowserRouter } from 'react-router-dom';\nimport UploadImage from './components/uploadimage/UploadimageMain';\nclass App extends Component{\n  render(){\n  return (\n    <div className=\"App\">\n  <BrowserRouter>\n        <Switch>\n          <Route path=\"/imageapp/dashboard/\"><Dashboard/></Route>\n          <Route path='/imageapp/uploadimage/'>\n          <Header/>\n          <UploadImage />\n          </Route>\n        </Switch>\n  </BrowserRouter> \n    </div>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}